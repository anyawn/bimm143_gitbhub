---
title: "Class09: Candy Analysis Mini Project"
author: "Ayanna Kerr (PID: A17143404)"
format: pdf
---
## Import Data

```{r}
candy_file <- "candy-data.txt"
candy <- read.csv(candy_file, row.names=1)
head(candy)
```

## Data exploration

> Q1. How many different candy types are in this dataset?

There are 'r nrow(candy)' in this dataset.

```{r}
nrow(candy)
```


> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

> Q3. How many chocolate candys are in the dataset?

```{r}
sum(candy$chocolate)
```

## My Favorite Candy


```{r}
candy["Welch's Fruit Snacks",]$winpercent
```

```{r}
candy["Warheads",]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Twix",]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```


> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```



```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The winpercent column is significantly higher than any other column/variable.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy$chocolate
```
It represents whether a type of candy has chocolate (1) or no chocolate (0). 


> Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)
```

```{r}
ggplot(candy) +
  aes(winpercent)+
  geom_histogram()
```

```{r}
ggplot(candy) +
  aes(winpercent)+
  geom_histogram(bins = 7)
```

> Q9. Is the distribution of winpercent values symmetrical?

It is not symmetrical. 

> Q10. Is the center of the distribution above or below 50%?

Center of distribution is below 50%. 
```{r}
mean(candy$winpercent)
```

```{r}
summary(candy$winpercent)
```


> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

_ Find all chocolate candy
_ Find their winpercent values
_ Calculate the mean of these values
_ Do the same for fruity candy and compare the with the mean for chocolate candyt


```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```

```{r}
fruity.inds <- as.logical(candy$fruity)
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)
```

Chocolate is ranked higher than fruity candy.


> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.win,fruity.win)
```
Very small p-value, thus it is statistically significant. 


> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5,6,4)
sort(x)
```

The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head(candy[inds,],5)
```


> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
inds2 <- order(candy$winpercent, decreasing = TRUE)
head(candy[inds2,], 5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy)+
  aes(winpercent, reorder(rownames(candy), winpercent))+
  geom_col()
```

```{r}
ggsave("mybarplot.png", height = 10)
```

![Exported image that is a bit bigger so I can read it](mybarplot.png)

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent. 


```{r}
my_cols = rep("black", nrow(candy))
my_cols[candy$fruit ==1] <- "pink"
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols
```


```{r}
#| fig-height: 10

ggplot(candy)+
  aes(winpercent, reorder(rownames(candy),winpercent))+
  geom_col(fill = my_cols)
```

> Q17. What is the worst ranked chocolate candy?

Worst ranked chocolate candy is Sixlets. 


> Q18. What is the best ranked fruity candy?

Best ranked fruity candy is Starburst. 



Plot of winpercent vs pricepercent

```{r}
my_cols = rep("black", nrow(candy))
my_cols[candy$fruit ==1] <- "red"
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols
```


```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_label(col = my_cols)
```

There are just too many labels in this above plot to be readable. We can use the 'ggrepel' package to do a better job of placing labels so they minimize text overlap. 

```{r}
library(ggrepel)
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col = my_cols,size = 3.3,  max.overlaps = 8)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

```{r}
ord <- order(candy$pricepercent)
head( candy[ord,c(11,12)], n=1 )
```

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

## Exploring the correlation structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent 

## Principle Component Analysis

We will perform PCA of the candy. Key-question: Do we need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```


```{r}
plot(pca$x[,1], pca$x[,2], col = my_cols, pch=16)
```

Make a ggplot version of this plot:

```{r}
# Make a new dataframe with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)
```
```{r}
ggplot(my_data)+
  aes(PC1,PC2, label = rownames(my_data))+
  geom_point(col=my_cols)+
  geom_text_repel(col = my_cols)
```
Add some extra polish to the plot. 

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```


```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

```{r}
# library(plotly)
# ggplotly(p)
```
How do the original variables contribute to our PCs? For this we look at the loadings component of our results object i.e. the 'pca$rotation' object. 

```{r}
head(pca$rotation)
```

Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot.

```{r}
res <- as.data.frame(pca$rotation)
ggplot(res)+
  aes(PC1, reorder(row.names(res), PC1))+
  geom_col()
```
> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruit, Pluribus and hard are all picked up in the +ve direction and these do make sense based on the correlation structure in the dataset. If you are a fruity candy, you will tend to be hard and come in a package with multiple candies in it (pluribus). 







